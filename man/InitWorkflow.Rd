% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Constructor-Modules.R
\name{InitWorkflow}
\alias{InitWorkflow}
\title{Constructor function to initiate LUMA Workflow}
\usage{
InitWorkflow(
  ion.id,
  db.dir,
  use.CAMERA,
  use.XCMS,
  CAMERA.obj,
  XCMS.obj,
  graph.method,
  ion.mode,
  mytable,
  calc.minfrac,
  multiple
)
}
\arguments{
\item{ion.id}{character vector specifying identifier in mzdata filenames
designating positive or negative ionization or both. Must be a
(case-insensitive) abbreviation of the ionization mode name. Positive
identifier must come first. Default is \code{c("Pos","Neg")}.}

\item{db.dir}{character name of subdirectory to store databases. Default is
\code{"db"}}

\item{use.CAMERA}{logical indicating whether to use existing CAMERA object in
global environment. Default is to look for CAMERA objects saved by previous
calls to this function and run CAMERA if missing.}

\item{use.XCMS}{logical indicating whether to use existing XCMS object in
global environment. Default is to look for XCMS objects saved by previous
calls to this function and run XCMS if missing.}

\item{CAMERA.obj}{which CAMERA object to use to initialize LUMA workflow.
Only relevant if \code{use.CAMERA == TRUE}.}

\item{XCMS.obj}{which XCMS object to use to initialize LUMA workflow. Only
relevant if \code{use.XCMS == TRUE}.}

\item{graph.method}{graphing method to use for CAMERA. Default is
\code{"lpc"}. See CAMERA documentation for details.}

\item{ion.mode}{which ion mode(s) will be processed for this data. Must be
one or both of \code{c("Positive","Negative")}. Default is both.}

\item{mytable}{character name of the first Peaklist table in the database.
Default is \code{"From_CAMERA"}.}

\item{calc.minfrac}{logical should LUMA calculate the minimum fraction values
for the initial Peaklist. Default is \code{TRUE}.}

\item{multiple}{logical should multiple fields be allowed in dialog boxes.
Default is \code{FALSE}.}
}
\value{
global variables and Peaklist in database are returned
}
\description{
All LUMA workflows must start with this function. Creates the
  first Peaklist and sets up storing and passing Peaklists and ancillary data
  between modules.
}
\examples{
\dontrun{
library(LUMA)
db.dir <- system.file("extdata/", package = "LUMA")
InitWorkflow(db.dir = db.dir)
}
}
