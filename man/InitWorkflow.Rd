% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Constructor-Modules.R
\name{InitWorkflow}
\alias{InitWorkflow}
\title{Constructor function to initiate LUMA Workflow}
\usage{
InitWorkflow(ion.id, blanks.dir, db.dir, adduct.files, use.CAMERA,
  use.XCMS, CAMERA.obj, XCMS.obj, graph.method)
}
\arguments{
\item{ion.id}{character vector specifying identifier in mz data filenames designating positive or negative ionization or both.
Default is c('Pos','Neg')}

\item{blanks.dir}{character name of subdirectory containing process blank data files.
Default is 'Blanks'}

\item{db.dir}{character name of subdirectory to store databases
Default is 'db'
Positive identifier must come first. Default is c('Pos','Neg')}

\item{adduct.files}{character vector specifying file names of csv files containing adduct rules, whose file structure is inherited from CAMERA.
Positive mode adducts must come first. Default is c("primary_adducts_pos.csv","primary_adducts_neg.csv")}

\item{use.CAMERA}{logical indicating whether to use existing CAMERA object in global environment.
Default is to look for CAMERA objects saved by previous calls to this function and run CAMERA if missing.}

\item{use.XCMS}{logical indicating whether to use existing XCMS object in global environment.
Default is to look for XCMS objects saved by previous calls to this function and run XCMS if missing.}

\item{CAMERA.obj}{which CAMERA object to use to initialize LUMA workflow.
Only relevant if use.CAMERA is TRUE}

\item{XCMS.obj}{which XCMS object to use to initialize LUMA workflow.
Only relevant if use.XCMS is TRUE}

\item{graph.method}{graphing method to use for CAMERA.
Default is 'lpc'. See CAMERA documentation for details.}

\item{ion.modes}{which ion modes will be processed in the workflow. Must be 'Positive', 'Negative', or both.
Default is both; i.e. c('Positive','Negative').}
}
\value{
global variables are returned
}
\description{
All LUMA workflows must start with this function. Creates the first Peaklist and sets up storing and passing Peaklists and ancillary data between modules.
}
